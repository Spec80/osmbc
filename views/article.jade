extends layout


mixin leftcolumn
  if (params.right_lang === null)
    .col-md-10
      if block
        block
      else
        p No Content provided
  else
    .col-md-5
      if block
        block
      else
        p No Content provided

mixin rightcolumn
  if (params.right_lang !== null)
    .col-md-5
      if block
        block
      else
        p No Content provided
  else
    .col-md-5.hidden
      if block
        block
      else
        p No Content provided


block content
  .row

    if (originBlog)
      - sourceDate = layout.moment(originBlog.startDate);
      - sourceDate.locale(layout.language_locale);
      .col-md-1
        h3="Source"
      .col-md-5
        h3=originBlog.name+" "+ layout.moment(originBlog.startDate).format("YYYY MMMM")


  .row
    if (params.edit && !( blog && blog.status=="closed") )
      form(name="input",id="input", action=layout.htmlroot+"/article/#{article.id}", method="post")
        .row
          .col-md-1
            p="Blog"
          .col-md-5
            +blogSelector(article)

          .col-md-4

            .hidden
              textarea.form-control(name="version",rows=1,hide=true) #{article.version}

          .col-md-1
            if articleReferences.count >= 1
              a(href="#doublettes")
                div.button.btn.btn-large.btn-danger=articleReferences.count+" doub."
          .col-md-1
            button.btn.btn-large.btn-primary(type = "button" onclick ="window.onbeforeunload=null; document.getElementById('input').submit();") OK


        .row
          .col-md-1
            p="Category"
          +leftcolumn
            select(id="categoryEN",name="categoryEN").form-control
              for category in categories
                - option = category[params.left_lang]
                - if (params.right_lang !== null) option += " / "+category[params.right_lang]
                if (category.EN == article.categoryEN)
                  option(value="#{category.EN}" selected ) #{option}
                else
                  option(value="#{category.EN}" ) #{option}
          +rightcolumn
            p(id="categoryDisplay" style={color: 'Gray'})
          .col-md-1
            button.btn.btn-large.btn-default(type = "button" onclick ="window.onbeforeunload=null; location.href='#{layout.htmlroot}/article/#{article.id}?edit=false';") Cancel
        .row
          .col-md-1
            p="Predecessor"
          +leftcolumn
            select(id="predecessor",name="predecessorId").form-control
              if typeof(article.predecessorId)=="undefined" || article.predecessorId==""
                option(value="" selected) None
              else
                option(value="") None
              if article.predecessorId === "0"
                option(value="0" selected) First
              else
                option(value="0") First
              for a in articleCategories
                if (a.id == article.predecessorId)
                  option(value=a.id selected )=a.title
                else
                  - d= null;
                  for b in articleCategories
                    - if (b.predecessorId == a.predecessorId) {d=b;}
                  if disabled
                    option(value=a.id disabled)=a.title+"("+d.title+")"
                  else
                    option(value=a.id )=a.title
          .col-md-1
            p="'"+article.predecessorId+"'"

        .row.hidden(id="unpublishReasonRow")
          .col-md-1
            p="Unpublish Reason"
          .col-md-5
            select(id="unpublishReason",name="unpublishReason").form-control
              for reason in ["","old","doublette","not relevant","merged into","reported earlier"]
                if (reason == article.unpublishReason)
                  option(value="#{reason}" selected ) #{reason}
                else
                  option(value="#{reason}" ) #{reason}
          .col-md-5
            textarea.form-control(id="unpublishReference" name="unpublishReference" rows=1) #{article.unpublishReference}
        .row
          .col-md-1
            p="Title"
          .col-md-7
            textarea.form-control(name="title",rows=1) #{article.title}
          .col-md-3
            +languageDisplay(article,{func:"showRL"})

        .row
          .col-md-1
            p="Collection"
          .col-md-10
            textarea.form-control(id="collection" name="collection" rows=2) #{article.collection}
        .row
          .col-md-1

          .col-md-6
            .div(id="linkArea")
          .col-md-4
            p Drag me to a markdown field, or paste an URL into selected text to create an markdown link.

        .row
          .col-md-1
          - var lbg;
          - if (params.left_lang===layout.language) lbg = "osmbclabel-lang";
          - if (params.left_lang===layout.language2) lbg = "osmbclabel-lang2";
          - var rbg;
          - if (params.right_lang===layout.language) rbg = "osmbclabel-lang";
          - if (params.right_lang===layout.language2) rbg = "osmbclabel-lang2";

          +leftcolumn
            span.label.label-default(id="left_lang" class="#{lbg}")=params.left_lang
          +rightcolumn
            span.label.label-default.RL(id="right_lang" class="#{rbg} RL-#{params.right_lang}")=params.right_lang
            for l in layout.activeLanguages
              if (l!== params.right_lang)
                span.label.label-default.RL.hidden(class= "RL-#{l}")=l

        .row
          .col-md-1
            p="Markdown"

          +leftcolumn
            if blog && !blog.isEditable(params.left_lang)
              .panel.panel-default
                .panel-body #{article["markdown"+params.left_lang]}
            else
              if placeholder.markdown[params.left_lang]
                - p = placeholder.markdown[params.left_lang];
              else
                - p = "";
              textarea.form-control(id="markdownLEFT" placeholder = "#{p}" spellcheck = "true" lang="#{params.left_lang}" name = "markdown#{params.left_lang}" rows = 6) #{article["markdown"+params.left_lang]}
              div(id="text_left")
                |'no translation' or '-' to specify no translation wanted.


          +rightcolumn
            div.RL(class="RL-#{params.right_lang}")
              if blog && !blog.isEditable(params.right_lang)
                .panel.panel-default
                  .panel-body(id="markdownRIGHT") #{article["markdown"+params.right_lang]}
              else
                if (placeholder.markdown[params.right_lang])
                  - p = placeholder.markdown[params.right_lang];
                else
                  - p = "";
                textarea.form-control(id="markdownRIGHT" placeholder = "#{p}" lang="#{params.right_lang}" spellcheck = "true"  name = "markdown#{params.right_lang}" rows=6) #{article["markdown"+params.right_lang]}
                div(id="text_right")
                  |'no translation' or '-' to specify no translation wanted.
            for l in layout.activeLanguages
              if l != params.right_lang
                div.hidden(class = "RL RL-#{l}")
                  .panel.panel-default
                    .panel-body #{article["markdown"+l]}


          .col-md-1
            .row
              i#languageFlagsShow.fa.fa-flag.fa-2x(onclick="$('#languageFlagsShow').hide();$('.row#languageFlags').removeClass('hidden');")

            .row#languageFlags.hidden
              - for (lang in languageFlags)
                img(id="#{lang}",
                    src="#{languageFlags[lang]}",
                    class="img-thumbnail" ,
                    width = 40,
                    data-toggle="tooltip" data-placement="left" title=lang
                    onclick="javascript:myclick(this.id)"
                    ondragstart = "ondragstartflag(event,this.id);")
          

        .row
          if article.categoryEN != "Picture"
            .col-md-1
              p="Preview"
            +leftcolumn
              .panel.panel-default.panel-body(id="previewLEFT")
                :verbatim
                  !{article["textHtml"+params.left_lang]}
            +rightcolumn
              .panel.panel-default
                .panel-body.RL(id="previewRIGHT" class="RL-#{params.right_lang}")
                  :verbatim
                    !{article["textHtml"+params.right_lang]}
                each l in layout.activeLanguages
                  if l !== params.right_lang
                    .panel-body.RL.hidden(class="RL-#{l}")
                      :verbatim
                        !{article["textHtml"+l]}

        .row
          h4="You can add a comment here:"
        .row
          .col-md-12
            textarea.form-control(name="addComment" id="addComment" rows=3 )




    else
      .row
        .col-md-1
          p="Blog"
        .col-md-5
          p=article.blog
        .col-md-4
          for vote,i in votes
            if (vote.displayAtTop)
              +voteButton(vote,article)




        .col-md-1
          if articleReferences.count >= 1
            a(href="#doublettes")
              div.button.btn.btn-large.btn-danger=articleReferences.count+" doub."
        .col-md-1
          a(href=layout.htmlroot+"/article/#{article.id}?edit=true" class="btn btn-primary" role="button") Edit
      .row
        .col-md-1
          p="Category"
        +leftcolumn
          p=article.getCategory(params.left_lang)

      .row
        - pdname = "None"
        if article.predecessorId && article.predecessorId != ""
          - pdname = "not in category"
        if article.predecessorId == "0"
          - pdname = "First"
        for a in articleCategories
          if (a.id == article.predecessorId)
            - pdname = a.title


        .col-md-1
          p="Predecessor"

        .col-md-7
          p=pdname

      .row
        .col-md-1
          p="Title"
        .col-md-7
          p=article.title
        .col-md-3
          p
            +languageDisplay(article,{func:"showRL"})
            - open = false
            each lang in layout.activeLanguages
              if (article["markdown"+lang])
              else
                - open = true;
          if open
            p
              button.btn.btn-small.btn-default(type = "button" onclick ="window.onbeforeunload=null; location.href='#{layout.htmlroot}/article/#{article.id}?notranslation=true';") notranslation to rest




      .row
        .col-md-1
          p="Collection"
        .col-md-10
          if (article.collection)
            #collection
              :verbatim
                !{layout.md_render(article.collection)}
              //:verbatim
              //|<pre>!{article.collection.replace(/(https?:\/\/[^\[\] \n\r]*)/gi, '<a href="$1" target="_blank">$1</a>')} </pre>
      .row
        .col-md-1
        - var lbg;
        - if (params.left_lang===layout.language) lbg = "osmbclabel-lang";
        - if (params.left_lang===layout.language2) lbg = "osmbclabel-lang2";
        - var rbg;
        - if (params.right_lang===layout.language) rbg = "osmbclabel-lang";
        - if (params.right_lang===layout.language2) rbg = "osmbclabel-lang2";

        +leftcolumn
          span.label.label-default(id="left_lang" class="#{lbg}")
            |#{params.left_lang}
        +rightcolumn
          span.label.label-default.RL(id="right_lang" class="#{rbg} RL-#{params.right_lang}" )
            |#{params.right_lang}
          each l in layout.activeLanguages
            if l !== params.right_lang
              span.label.label-default.hidden.RL(class = "RL-#{l}")=l

      .row
        if article.categoryEN != "Picture"
          .col-md-1
            p="Preview"
          +leftcolumn
            .panel.panel-default
              .panel-body(id="previewLEFT")
                div
                  :verbatim
                    !{article["textHtml"+params.left_lang]}
          +rightcolumn
            .panel.panel-default
              .panel-body.RL(id="previewRIGHT" class="RL-#{params.right_lang}")
                :verbatim
                  !{article["textHtml"+params.right_lang]}
              each l in layout.activeLanguages
                if l !== params.right_lang
                  .panel-body.RL.hidden(class="RL-#{l}")
                    :verbatim
                      !{article["textHtml"+l]}
        else
          .col-md-1
            p="Markdown"
          +leftcolumn
            .panel.panel-default
              .panel-body(id="previewLEFT")=article["markdown"+params.left_lang]
          +rightcolumn
            .panel.panel-default
              .panel-body.RL(id="previewRIGHT" class="RL-#{params.right_lang}")=article["markdown"+params.right_lang]
              each l in layout.activeLanguages
                if l !== params.right_lang
                  .panel-body.RL.hidden(class="RL-#{l}")=article["markdown"+l]
  .row
    .col-md-1
    +leftcolumn
      if params.left_lang === "DE" && article["markdown"+params.left_lang]
        a(href="#" onClick ="javascript: taform = document.getElementById('textanalyseform');taf = document.getElementById('textanalysefield');taf.value = document.getElementById('previewLEFT').innerText; taform.submit();") WORTLIGA Analyse (Aufruf einer externen Seite)
        span=" "
      if (params.edit && params.right_lang && article["markdown" + params.right_lang] && !article["markdown" + params.left_lang])
        button#translateLinkLEFT.btn.btn-small.btn-primary(onClick ="javascript: window.translateLEFT();") Translate #{params.left_lang} <- #{params.right_lang}
        button#translateWaitLEFT.btn.btn-small.btn-warning.hidden
          span.glyphicon.glyphicon-refresh.glyphicon-refresh-animate
          span=" Please Wait"
        button#translateErrorLEFT.btn.btn-small.btn-danger.hidden
          span="Error occured"
        button#copyLinkLEFT.btn.btn-small.btn-primary(onClick ="javascript: window.copyTextLEFT();") Copy #{params.left_lang} <- #{params.right_lang}

    +rightcolumn
      if (params.edit && params.right_lang && !article["markdown" + params.right_lang] && article["markdown" + params.left_lang])
        button#translateLinkRIGHT.btn.btn-small.btn-primary(onClick ="javascript: window.translateRIGHT();") Translate #{params.left_lang} -> #{params.right_lang}
        button#translateWaitRIGHT.btn.btn-small.btn-warning.hidden
          span.glyphicon.glyphicon-refresh.glyphicon-refresh-animate
          span=" Please Wait"
        button#translateErrorRIGHT.btn.btn-small.btn-danger.hidden
          span="Error occured"
        button#copyLinkRIGHT.btn.btn-small.btn-primary(onClick ="javascript: window.copyTextRIGHT();") Copy #{params.left_lang} -> #{params.right_lang}






  form(id="textanalyseform" ,method="POST",action="http://wortliga.de/textanalyse/" )
    input.form-control(type="hidden" name = "text" id ="textanalysefield")

  .row
    h3="Votes & Tags ..."
    table.table.table-condensed
      tbody
        for vote ,i in votes
          tr
            td.col-md-1
              if params.edit
                span(class=vote.iconClass)
              else
                +voteButton(vote,article)
            td.col-md-1=vote.name
            td.col-md-5
              if article.votes && article.votes[vote.name]
                - labelclass = "osmbclabel-collect"
                each user in article.votes[vote.name]
                  - if (layout.user.OSMUser === user) labelclass = "osmbclabel-user"
                  span.label.small-margin(class=labelclass)=user
            td.col-md-5=vote.description

  .row
    if (article.commentList)

      - if (article.commentRead) upToComment = article.commentRead[layout.user.OSMUser]
      - if (!upToComment) upToComment = -1;
      h3="Comments ("+((article.commentStatus)?article.commentStatus:"open")+")"
      each comment,i in article.commentList
        .row
          .col-md-12
            b
              if (i > upToComment)
                a(href=layout.htmlroot+"/article/#{article.id}/markCommentRead?index=#{i}")
                  span.glyphicon.glyphicon-envelope
                span=" "
              span=comment.user
            span=" "
            span.text-muted.small=layout.moment(comment.timestamp).fromNow()
            if (comment.editstamp)
              span=" "
              i.text-muted.small="edit: " + layout.moment(comment.editstamp).fromNow()
            if !params.edit && layout.user.OSMUser === comment.user && params.editComment != i
              a(id="EditComment#{i}" href=layout.htmlroot+"/article/#{article.id}?editComment=#{i}")
                span=" "
                span.glyphicon.glyphicon-pencil

            if !params.edit && params.editComment == i && layout.user.OSMUser === comment.user
              form(name="EditComment",id="EditCommentForm", action=layout.htmlroot+"/article/#{article.id}/EditComment/#{i}", method="post")
                textarea.form-control(name="comment" id="editComment" rows=7)=comment.text
                button.btn.btn-large.btn-primary(name = "update" type = "button" onclick ="if (document.getElementById('editComment').value.trim()==='') return;window.onbeforeunload=null; document.getElementById('EditCommentForm').submit();") Update
                button.btn.btn-large.btn-default(type = "button" onclick ="window.onbeforeunload=null; location.href='#{layout.htmlroot}/article/#{article.id}';") Cancel
            else
              p
                :verbatim
                  !{layout.md_render(comment.text)}

    .row
      .col-md-12
        if (!params.edit && !params.editComment)
          form(name="AddComment",id="AddComment", action=layout.htmlroot+"/article/#{article.id}/addComment", method="post")
            textarea.form-control(name="comment" id="comment" rows=7 placeholder="Your comment is shared between all weekly teams. \nSo please use english if possible. Do not hesitate to use your language and address your team with @LANG.\nTo solve a comment use #solved, and to reopen #open in your text.\nUse @OSMUser to address any special editor.")
            button.btn.btn-large.btn-primary(name= "AddComment" type = "button" onclick ="if (document.getElementById('comment').value.trim()==='') return;window.onbeforeunload=null; document.getElementById('AddComment').submit();") Add Comment
            button.btn.btn-large.btn-default(type = "button" onclick ="window.onbeforeunload=null; location.href='#{layout.htmlroot}/article/#{article.id}';") Cancel
            if article.commentStatus!=="solved"
              button.btn.btn-large.btn-default(name= "AddComment" type = "button" onclick ="document.getElementById('comment').value = document.getElementById('comment').value+' #solved';window.onbeforeunload=null; document.getElementById('AddComment').submit();") Solve Comment


  #doublettes.row
    if articleReferences.count >= 1
      h3
        |Links used in other Post
      div
        table.table.table-striped.table-responsive
          thead
            tr
              th
                |link
              th
                |article
              th
                |category
              th
                |Blog
          tbody
            each array,link in articleReferences
              if (link != "count" )
                each articleItem,index in array
                  if (articleItem.id != article.id) && (index <5)
                    tr
                      td
                        a(href='#{link}') #{link.substring(0,80)+((link.length>80)?" ....":"")}
                      td
                        a(href=layout.htmlroot+'/article/'+articleItem.id) #{articleItem.displayTitle()}
                      td= articleItem.categoryEN
                      td= articleItem.blog
                  if (index == 8)
                    tr
                      td
                        a(href='#{link}') #{link}
                      td
                        |And #{array.length-5} further articles.



  .row.visible-xs
    p
      br
      a(href=layout.htmlroot+"/changes/log?table=article&oid=#{article.id}") [changes]
  .row.hidden-xs
    if changes
      h3
        |History
      div
        table.table.table-striped.table-responsive
          thead
            tr
              th
              th
                |user
              th
                |what
              th
                |change
              th
                |when
          tbody
            each change, i in changes
              tr
                td
                  a(href=layout.htmlroot+'/changes/' + change.id)
                    span.glyphicon.glyphicon-info-sign
                td= change.user
                td= change.property
                td
                  :verbatim
                    !{change.htmlDiffText(100)}
                td= layout.moment(change.timestamp).fromNow()
      div
        p
          |only displaying changes
          span.osmbc-inserted
            |inserted text
          span.osmbc-deleted
            |removed text


block scripts

  script(src=layout.path("markdown-it")+'/markdown-it.min.js')



  script.
    window.onload = init;

    googleTranslateText = JSON.parse('!{JSON.stringify(googleTranslateText)}');

    if ('#{params.edit}'=='true'  && !("#{(blog)?blog.status:"open"}"=="closed")) {
      window.onbeforeunload = function(event) {
        event.returnValue = "Please use Cancel or OK to remove lock information.";
      };

    }


    function init() {
      if (document.getElementById("text_left")) {
        noTranslationText = document.getElementById("text_left").innerHTML;
      } else if (document.getElementById("text_right")) {
        noTranslationText = document.getElementById("text_right").innerHTML;
      }
      markdownLEFT = document.getElementById("markdownLEFT");
      if (markdownLEFT) {
        markdownLEFT.onchange = onleaveLEFT;
        markdownLEFT.onkeyup = onchangeLEFT;
        markdownLEFT.onpaste = pasteLEFT;
        markdownLEFT.ondrop = pasteLEFT;
        markdownLEFT.onleave = onleaveLEFT;
        onchangeLEFT();
      }
      markdownRIGHT = document.getElementById("markdownRIGHT");
      if (markdownRIGHT) {
        markdownRIGHT.onchange = onleaveRIGHT;
        markdownRIGHT.onkeyup = onchangeRIGHT;
        markdownRIGHT.onpaste = pasteRIGHT;
        markdownRIGHT.ondrop = pasteRIGHT;
        markdownRIGHT.onleave = onleaveRIGHT;
        onchangeRIGHT();

     }
      $('[data-toggle="tooltip"]').tooltip();



      coll = document.getElementById("collection");
      if (coll) {
        coll.onchange = onchangeCollection;
        coll.onkeyup = onchangeCollection;

      }
      onchangeCollection();

      if (document.getElementById("blog")){
        document.getElementById("blog").onchange = showHideUnpublishReason;
      };
      showHideUnpublishReason();

      comm = document.getElementById("comment");
      if (comm) {
        comm.onchange = onchangeComment;
        comm.onkeyup = onchangeComment;
        onchangeComment();
      }

      categoryDisplay = document.getElementById("categoryDisplay");
      categoryEN = document.getElementById("categoryEN");
      if (categoryEN) {
        categoryEN.onchange = onchangeCategory;
        onchangeCategory();

      }

      addComment = document.getElementById("AddComment");
      if (addComment) {
        f = onChangeField("AddComment");
        addComment.onchange=f;
        addComment.onkeyup = f;
        f();
      }
      editComment = document.getElementById("editComment");
      if (editComment) {
        f = onChangeField("editComment");
        editComment.onchange = f;
        editComment.onkeyup = f;
        f();
      }
    }

    function translateRIGHT() {
      document.getElementById("translateLinkRIGHT").classList.add("hidden");
      document.getElementById("copyLinkRIGHT").classList.add("hidden");
      document.getElementById("translateWaitRIGHT").classList.remove("hidden");
      var leftLang = "#{params.left_lang.toLowerCase()}";
      var rightLang = "#{(params.right_lang) ? params.right_lang.toLowerCase():'--'}";
      var originalText = $("#markdownLEFT").html();
      jQuery.post("!(layout.htmlroot}/article/translate/"+leftLang+"/"+rightLang,{text:originalText}, function(data) {
        data = data.replace(/] \(/g,"](");
        document.getElementById("translateWaitRIGHT").classList.add("hidden");
        document.getElementById("markdownRIGHT").value = data;
        onchangeRIGHT();
      }).fail(function(err){
        console.error(err);
        document.getElementById("translateWaitRIGHT").classList.add("hidden");
        document.getElementById("translateErrorRIGHT").classList.remove("hidden");
      });
    }
    function copyTextRIGHT() {
      document.getElementById("translateLinkRIGHT").classList.add("hidden");
      document.getElementById("copyLinkRIGHT").classList.add("hidden");
      document.getElementById("markdownRIGHT").value = $("#markdownLEFT").html();
      onchangeRIGHT();
    }
    function translateLEFT() {
      document.getElementById("translateLinkLEFT").classList.add("hidden");
      document.getElementById("copyLinkLEFT").classList.add("hidden");
      document.getElementById("translateWaitLEFT").classList.remove("hidden");
      var leftLang = "#{params.left_lang.toLowerCase()}";
      var rightLang = "#{(params.right_lang) ? params.right_lang.toLowerCase() : '--'}";
      var originalText = $("#markdownRIGHT").html();
      jQuery.post("!{layout.htmlroot}/article/translate/" + rightLang + "/" + leftLang, {text: originalText}, function (data) {
        data = data.replace(/] \(/g, "](");
        document.getElementById("translateWaitLEFT").classList.add("hidden");
        document.getElementById("markdownLEFT").value = data;
        onchangeLEFT();
      }).fail(function (err) {
        console.error(err);
        document.getElementById("markdownLEFT").value = JSON.stringify(err);
        document.getElementById("translateWaitLEFT").classList.add("hidden");
        document.getElementById("translateErrorLEFT").classList.remove("hidden");
      });
    }
    function copyTextLEFT() {
      document.getElementById("translateLinkLEFT").classList.add("hidden");
      document.getElementById("copyLinkLEFT").classList.add("hidden");
      document.getElementById("markdownLEFT").value = $("#markdownRIGHT").html();
      onchangeRIGHT();
    }

    function onleaveLEFT() {
      var mdEN = document.getElementById("markdownLEFT").value;
      if (mdEN.trim() == "-") {
        document.getElementById("markdownLEFT").value = "no translation";
        onchangeLEFT();
      }
    }
    function onleaveRIGHT() {
      var mdEN = document.getElementById("markdownRIGHT").value;
      if (mdEN.trim() == "-") {
        document.getElementById("markdownRIGHT").value = "no translation";
        onchangeRIGHT();
      }
    }

    function convert(text) {
      converter = new window.markdownit({breaks:true});
      if (!text) return "";

      // generate the OSMBlog Style List
      if (text.substring(0,2)=="* ") text = text.substring(2,999999);
      // convert md to html
      text = converter.render(text);
      // skip <ul> and </ul> at start and end


      text = '<ul><li>'+text+'</li></ul>';

      if (document.getElementById("categoryEN").value=="Picture") {
        text = '<ul><li>Live Preview not supported here</li></ul>';


      }

      return text;

    }
    function isURL(t) {

      var isUrlRegex = /^(http|ftp|https):\/\/[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])?/


      if (t) return isUrlRegex.test(t);
      return isUrlRegex;
    }
    function clip(text) {
      var copyElement = document.createElement('input');
      copyElement.setAttribute('type', 'text');
      copyElement.setAttribute('value', text);
      copyElement = document.body.appendChild(copyElement);
      copyElement.select();
      try {
        if (!document.execCommand('copy')) throw 'Not allowed.';
      } catch (e) {
        copyElement.remove();
        console.error("document.execCommand('copy'); is not supported");
        prompt('Copy the text below. (ctrl c, enter)', text);
      } finally {
        if (typeof e == 'undefined') {
          copyElement.remove();
        }
      }
    }


    function generateMarkdownLink2(par1,par2) {
      var before = par1.text;
      var after = par2.text;
      var tb = '';

      tb = par1.text.substring(0,par1.startselection);
      ta = par1.text.substring(par1.endselection,99999);
      beforeSnip = par1.text.substring(par1.startselection,par1.endselection);
      afterSnip = par2.text.substring(par1.startselection,par2.endselection);




      if (isURL(afterSnip.trim())) {
        afterSnip = afterSnip.trim();

        var alreadyMarkdowned = false;
        if (tb!="" && tb.charAt(tb.length-1)=="(") alreadyMarkdowned= true;
        if (ta!="" && tb.charAt(0)==")") alreadyMarkdowned= true;
        if (!alreadyMarkdowned) {
          var r = tb+"["+beforeSnip+"]("+afterSnip+")"+ta;
          var c ;
          if (beforeSnip == "") {
            c = (tb+"[").length;
          } else {
            c = (tb+"["+beforeSnip+"]("+afterSnip+")").length;
          }

          return {text:r,pos:c};
        }
      }
      return null;
    }

    function pasteLEFT() {


      var mf = document.getElementById("markdownLEFT");
      //var textBefore = mf.value;
      var before = {text:mf.value,startselection:mf.selectionStart,endselection:mf.selectionEnd};

      setTimeout(function(){
        //var textAfter = mf.value;
        var after = {text:mf.value,startselection:mf.selectionStart,endselection:mf.selectionEnd};
        //var r = generateMarkdownLink(textBefore,textAfter);
        var r = generateMarkdownLink2(before,after);
        if (r) {
          mf.value =r.text;
          mf.selectionStart = mf.selectionEnd = r.pos;
        }
        mf.value = (mf.value).replace(/] \(/g,"](");
        onchangeLEFT();
      },1);

    }
    function pasteRIGHT() {
      var mf = document.getElementById("markdownRIGHT");
      //var textBefore = mf.value;
      var before = {text:mf.value,startselection:mf.selectionStart,endselection:mf.selectionEnd};


      setTimeout(function(){
        //var textAfter = mf.value;
        var after = {text:mf.value,startselection:mf.selectionStart,endselection:mf.selectionEnd};
        //var r = generateMarkdownLink(textBefore,textAfter);
        var r = generateMarkdownLink2(before,after);
        if (r) {
          mf.value =r.text;
          mf.selectionStart = mf.selectionEnd = r.pos;
        }
        mf.value = (mf.value).replace(/] \(/g,"](");
        onchangeRIGHT();
      },1);

    }

    function checkForTable(field) {
      var md = document.getElementById(field).value;
      var cl = document.getElementById("collection");

      var f = document.getElementById(field);
      if (!cl) cl = f;
      if (!f) return;
      if (!md) return;
      if (md.indexOf("|----")>= 0) {
        f.wrap = 'off';
        f.style.fontFamily="monospace"
      }
      else {
        f.wrap = 'soft';
        f.style.fontFamily = cl.style.fontFamily;

      }
    }


    function onchangeLEFT() {
      onchangeMarkdown("markdownLEFT","previewLEFT","text_left");
    }
    function onchangeRIGHT() {
      onchangeMarkdown("markdownRIGHT", "previewRIGHT", "text_right");
    }
    function onchangeMarkdown(mdid,previewid,textid) {
      var md = document.getElementById(mdid).value;
      preview = document.getElementById(previewid);
      text = document.getElementById(textid);
      if (!preview) return;
      if (!text) return;


      checkForTable(mdid);
      FitToContent(mdid);

      preview.innerHTML = convert(md);
      var errorOccured= false;

      // Check for long links
      var longLink = md.search(/\[[^\]]{40,}\]/g);
      if (longLink>=0) {
        //preview.style.backgroundColor="#FDC6CD";
        text.innerHTML = "<p>Please shorten ["+md.substring(longLink+1,longLink+40)+"...]</p>"
        text.style.backgroundColor ="#FDC6CD";
        errorOccured = true
      }
      // check wether links used are in collection

      if (!errorOccured) {
        //preview.style.backgroundColor="";
        text.style.backgroundColor ="";
        text.innerHTML = noTranslationText;
      }


    }

    function generateGoogleTranslateLink(link,lang) {
      var googlelang = lang;
      if (lang === "JP") googlelang = "JA";
      var gtl = "https://translate.google.com/translate?sl=auto&tl="+googlelang+"&u="+link;


      var gtlMarkdown = "(automatic [translation](##link##))";
      if (googleTranslateText[lang]) gtlMarkdown = googleTranslateText[lang];


      gtlMarkdown = gtlMarkdown.replace("##link##",gtl);

      var dragstartFunction = "dragstart(event,'"+gtlMarkdown+"');";

      return '<a href="'+gtl+'" target="_blank" ondragstart="'+dragstartFunction+'" >'+lang+'</a>';
    }

    function dragstart(event,text) {
      event.dataTransfer.setData("TEXT", text);
    }
    function onchangeCollection() {
      var clfield = document.getElementById("collection");
      var cl;
      if (clfield) cl = clfield.value;
      var linkArea = document.getElementById("linkArea");

      // regexToken = /(((ftp|https?):\/\/)[\-\w@:%​​_\+.~#?!,&\/\/=]+)|((mailto:)?[_​​.\w-]+@([\w][\w\-]+\.)+[a-zA-Z]{2,3})/g;
      regexToken = /(https?:\/\/[^\[\] \n\r()]*)/g
      var linkList;

      var result = "";


      while( (linkList = regexToken.exec(cl)) != null ) {

        result += '<a href="'+linkList[0]+'" target="_blank" >'+linkList[0]+'</a>\n';
        leftLang=document.getElementById("left_lang").innerHTML;
        rightLang=document.getElementById("right_lang").innerHTML;
        result += " "+generateGoogleTranslateLink(linkList[0],leftLang);

        if (rightLang !== "--" && rightLang !== "") {
          result += " "+generateGoogleTranslateLink(linkList[0],rightLang);
        }
        result +="<br>\n";


      }
      result = '<p>'+result+'</p>';
      FitToContent("collection");


      if (linkArea) linkArea.innerHTML = result;
    }


    var myclick = function (id) {
      image = document.getElementById(id);
      src = image.src;
      src = "![("+id+")]("+src+")";
      clip(src);
      alert(id+ " flag is copied to clipboard");
    }

    function ondragstartflag (event,id) {
      image = document.getElementById(id);
      src = image.src;
      src = "![(" + id + ")](" + src + ")";
      event.dataTransfer.setData("TEXT", src);
    }
    function onchangeComment() {
      FitToContent("comment");
    }
    function onChangeField(field) {
      return function () {
        FitToContent(field);
      }
    }

    function FitToContent(id, maxHeight)
    {
      textfield = document.getElementById(id);
      if ( !textfield )
        return;


      textfield.style.height = textfield.style.minHeight;
      var adjustedHeight = textfield.clientHeight;


      if ( !maxHeight || maxHeight > adjustedHeight )
      {
        adjustedHeight = Math.max(textfield.scrollHeight, adjustedHeight);
        if ( maxHeight )
          adjustedHeight = Math.min(maxHeight, adjustedHeight);

        if ( adjustedHeight > textfield.clientHeight ) {

          textfield.style.height = adjustedHeight + "px";


        }
      }
    }


    function showRL(what) {
      $(".RL").addClass("hidden");
      $(".RL-"+what).removeClass("hidden");
    }

    var placeholder = !{JSON.stringify(placeholder.categories)}
    var catArray = !{JSON.stringify(categories)};
    var noCategorie = "no categorie";
    if (catArray && catArray[0] && catArray[0].EN) noCategorie = catArray[0].EN;





    function onchangeCategory() {
      var categoryEN = document.getElementById("categoryEN");
      if (!categoryEN) return;
      var c = categoryEN.value;
      if (c === noCategorie) {
        categoryEN.style.backgroundColor = "#FDC6CD";
      } else {
        categoryEN.style.backgroundColor = "";
      }
      if (placeholder[c]) {
        categoryDisplay.innerHTML = placeholder[c];
      }
      showHideUnpublishReason();
    }
    function showHideUnpublishReason() {
      var categoryEN = document.getElementById("categoryEN");
      if (!categoryEN) return;
      var c = document.getElementById("categoryEN").value;
      var b = document.getElementById("blog").value;
      var hidden = true;
      if (c==="--unpublished--") hidden = false;
      if (b==="Trash") hidden = false;
      var unpublishReasonRow = document.getElementById("unpublishReasonRow");
      if (hidden) unpublishReasonRow.classList.add("hidden");
      else unpublishReasonRow.classList.remove("hidden");

    }

    function callAndRedraw(call, redraw) {
      $.get("!{layout.htmlroot}" + call, function (data) {
          location.reload();
      });

    }






   


